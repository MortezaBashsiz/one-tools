#!/usr/bin/env ruby

require "yaml"
require "tempfile"
require "erb"
require "pp"

DIR = File.dirname(__FILE__)

yaml_file = ARGV[0] || File.join(DIR,"bootstrap","default.yaml")

begin
    conf = YAML.load_file(yaml_file)
rescue
    STDERR.puts "'#{yaml_file}' is not a valid yaml file."
end

def banner(item,name)
    puts "Create #{item.to_s.capitalize} '#{name}':"
end

def run(cmd)
    puts cmd
    `#{cmd}`
end

def run_print(cmd)
    puts run(cmd)
    puts
end

def create_user(user)
    banner(:user,user[:name])

    run_print("oneuser create #{user[:name]} #{user[:pass]}")
end

def create_image(image)
    banner(:image,image[:name])

    image[:datastore] ||= "default"

    cmd = "oneimage create"
    image.each do |k,v|
        next if k == :class
        cmd << " --#{k} #{v}"
    end

    ds = image[:datastore]

    cmd_ds_status = "onedatastore show #{ds}"
    cmd_ds_status << "|grep ^TOTAL"
    cmd_ds_status << "|awk '{print $3}'"
    cmd_ds_status << "|tr -dc 0-9"

    ds_status = nil

    10.times {
        ds_status = run(cmd_ds_status).strip.to_i
        break if ds_status != 0
        sleep 1
    }

    run_print(cmd)
end

def create_host(host)
    banner(:host,host[:name])

    name = host.delete(:name)

    cmd = "onehost create #{name}"
    host.each do |k,v|
        next if k == :class
        cmd << " --#{k} #{v}"
    end

    run_print(cmd)
end

def create_net(net)
    banner(:net,net[:name])

    leases = net.delete(:leases) || []

    tpl = ""
    net.each do |k,v|
        next if k == :class
        tpl << "#{k.to_s.upcase} = \"#{v}\"\n"
    end

    leases.each do |lease|
        tpl << "LEASES = [ IP = #{lease}]\n"
    end

    tpl_file = Tempfile.new('onebootstrap')
    tpl_file.write(tpl)
    tpl_file.close

    run_print("onevnet create #{tpl_file.path}")

    tpl_file.unlink
end

def create_datastore(ds)
    banner(:datastore,ds[:name])

    tpl = ""
    ds.each do |k,v|
        next if k == :class
        tpl << "#{k.to_s.upcase} = \"#{v}\"\n"
    end

    tpl_file = Tempfile.new('onebootstrap')
    tpl_file.write(tpl)
    tpl_file.close

    run_print("onedatastore create #{tpl_file.path}")

    tpl_file.unlink
end

def create_template(template)
    banner(:template,template[:name])

    cmd = "onetemplate create"
    template.each do |k,v|
        next if k == :class
        cmd << " --#{k} #{v}"
    end

    run_print(cmd)
end

# Add SAFE_DIRS = / to the default datastore
# ugly but works...
system("EDITOR=\"sed -i '$ a\SAFE_DIRS=/'\" onedatastore update default")

# # This does not work because the public key contains a space
# ssh_key_pub = File.read(File.expand_path('~/.ssh/id_dsa.pub'))
# system("EDITOR=\"sed -i '$ a\SSH_PUBLIC_KEY=\\\"#{ssh_key_pub}\\\"'\" oneuser update 0")

conf.sort{|a,b|
    case a[:class]
    when :datastore then x = -1
    when :image then x = 1
    else x = 0
    end

    case b[:class]
    when :datastore then y = -1
    when :image then y = 1
    else y = 0
    end

    x<=>y
}.each do |item|
    next if item[:enabled] == false

    klass = item[:class]
    case klass
    when :user      then create_user(item)
    when :image     then create_image(item)
    when :host      then create_host(item)
    when :net       then create_net(item)
    when :datastore then create_datastore(item)
    when :template  then create_template(item)
    end
end
